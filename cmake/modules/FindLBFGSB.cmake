# - Try to find LBFGSB
# Once done this will define
#
#  LBFGSB_FOUND			- system has LBFGSB
#  LBFGSB_INCLUDE_DIR		- the LBFGSB include directory
#  LBFGSB_LIBRARY		- link library to use LBFGSB

IF (LBFGSB_INCLUDE_DIR)
  #already in cache
  SET(LBFGSB_FIND_QUIETLY TRUE)
ENDIF(LBFGSB_INCLUDE_DIR)

FIND_PATH(LBFGSB_INCLUDE_DIR lbfgsb.h
          PATHS /usr/include)
FIND_LIBRARY(LBFGSB_LIBRARY
             NAMES lets_be_rational
             PATHS /usr/lib64 /usr/lib)

# handle the QUIETLY and REQUIRED arguments and set LBFGSB_FOUND to TRUE if 
# all listed variables are TRUE

IF(LBFGSB_INCLUDE_DIR AND LBFGSB_LIBRARY)
  SET(LBFGSB_FOUND TRUE)
ELSE(LBFGSB_INCLUDE_DIR AND LBFGSB_LIBRARY)
  SET(LBFGSB_FOUND FALSE)
ENDIF(LBFGSB_INCLUDE_DIR AND LBFGSB_LIBRARY)

INCLUDE(${CMAKE_ROOT}/Modules/FindPackageHandleStandardArgs.cmake)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(LBFGSB DEFAULT_MSG LBFGSB_LIBRARY LBFGSB_INCLUDE_DIR)

MARK_AS_ADVANCED(
  LBFGSB_LIBRARY
  LBFGSB_INCLUDE_DIR)

if( LBFGSB_FOUND AND NOT TARGET LBFGSB::lbfgsb)
  add_library( LBFGSB::lbfgsb UNKNOWN IMPORTED )
  set_target_properties( LBFGSB::lbfgsb PROPERTIES
      IMPORTED_LOCATION                 "${LBFGSB_LIBRARY}"
      INTERFACE_INCLUDE_DIRECTORIES     "${LBFGSB_INCLUDE_DIRS}"
      IMPORTED_LINK_INTERFACE_LANGUAGES "C" )
endif()
