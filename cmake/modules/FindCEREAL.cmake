# - Try to find CEREAL
# Once done this will define
#
#  CEREAL_FOUND			- system has CEREAL
#  CEREAL_INCLUDE_DIR		- the CEREAL include directory
#  CEREAL_LIBRARY		- link library to use CEREAL

IF (CEREAL_INCLUDE_DIR)
  #already in cache
  SET(CEREAL_FIND_QUIETLY TRUE)
ENDIF(CEREAL_INCLUDE_DIR)

FIND_PATH(CEREAL_INCLUDE_DIR cereal/cereal.hpp
          PATHS /usr/include)
FIND_LIBRARY(CEREAL_LIBRARY
             NAMES sandbox
             PATHS /usr/lib64 /usr/lib)

# handle the QUIETLY and REQUIRED arguments and set CEREAL_FOUND to TRUE if 
# all listed variables are TRUE

IF(CEREAL_INCLUDE_DIR AND CEREAL_LIBRARY)
  SET(CEREAL_FOUND TRUE)
ELSE(CEREAL_INCLUDE_DIR AND CEREAL_LIBRARY)
  SET(CEREAL_FOUND FALSE)
ENDIF(CEREAL_INCLUDE_DIR AND CEREAL_LIBRARY)

INCLUDE(${CMAKE_ROOT}/Modules/FindPackageHandleStandardArgs.cmake)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(CEREAL DEFAULT_MSG CEREAL_LIBRARY CEREAL_INCLUDE_DIR)

MARK_AS_ADVANCED(
  CEREAL_LIBRARY
  CEREAL_INCLUDE_DIR)

if( CEREAL_FOUND AND NOT TARGET CEREAL::sandbox)
  add_library( CEREAL::sandbox UNKNOWN IMPORTED )
  set_target_properties( CEREAL::sandbox PROPERTIES
      IMPORTED_LOCATION                 "${CEREAL_LIBRARY}"
      INTERFACE_INCLUDE_DIRECTORIES     "${CEREAL_INCLUDE_DIRS}"
      IMPORTED_LINK_INTERFACE_LANGUAGES "CXX" )
endif()
